// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form renders create hook properly: getCreateHook 1`] = `
"import { User, userSchema } from \\"entity/user\\";
import { useSimpleForm } from \\"@rodrigosaint/form\\";
import { useMutation } from \\"@rodrigosaint/graphql\\";

const USER_CREATE_MUTATION = \`
  mutation ($user: UserInput!){
    userCreate(user: $user) {
      _id
    }
  }\`;

export default function useUserCreate() {
  const form = useSimpleForm < User > userSchema;
  const userCreate =
    useMutation < { user: User } > (\\"user\\", USER_CREATE_MUTATION);

  return {
    onSubmit: form.handleSubmit((user) => userCreate({ user })),
    form,
  };
}
"
`;

exports[`Form renders create hook properly: getUpdateHook 1`] = `
"import { User, userSchema } from \\"entity/user\\";
import { useSimpleForm } from \\"@rodrigosaint/form\\";
import { useMutation } from \\"@rodrigosaint/graphql\\";

const USER_UPDATE_MUTATION = \`
  mutation ($user: UserInput!){
    userUpdate(user: $user) {
      _id
    }
  }\`;

export default function useUserUpdate() {
  const form = useSimpleForm < User > userSchema;
  const userUpdate =
    useMutation < { user: User } > (\\"user\\", USER_UPDATE_MUTATION);

  return {
    onSubmit: form.handleSubmit((user) => userUpdate({ user })),
    form,
  };
}
"
`;

exports[`Form renders form properly: getForm 1`] = `
"import Form from \\"@rodrigosaint/form\\";
import Field from \\"@rodrigosaint/field\\";
import Button from \\"@rodrigosaint/button\\";
import { UseFormReturn } from \\"react-hook-form\\";

import { User } from \\"entity/user\\";

interface UserFormProps {
  form: UseFormReturn<User>;
  onSubmit: () => Promise<any>;
}

export default function UserForm(props: UserFormProps) {
  return (
    <Form {...props}>
      <Field name=\\"name\\" />
      <Field name=\\"email\\" />
      <Button type=\\"submit\\">submit</Button>
    </Form>
  );
}
"
`;
